{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","dialogId","userName","Dialogs","useState","message","setMessage","className","s","dialogs","map","d","key","id","selectedDialogId","messages","m","senderName","body","value","onChange","e","currentTarget","rows","onClick","sendMessage","DialogsContainer","init","match","params","userId","prevProps","prevState","snapshot","update","compose","dialogsPage","withRouter"],"mappings":"0NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAG,eAHR,GACXC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCd7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,OAAS,wBAAwB,cAAgB,+BAA+B,QAAU,2B,sICUxNC,EARA,SAACN,GACZ,OACI,6BACI,kBAAC,IAAD,CAASC,GAAE,mBAAcD,EAAMO,WAAaP,EAAMQ,YCiC/CC,EAnCC,SAACT,GAAW,IAAD,EACOU,mBAAS,IADhB,mBAChBC,EADgB,KACPC,EADO,KAMvB,OACI,yBAAKC,UAAWC,IAAEC,SACd,6BACI,uCACCf,EAAMe,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAEE,GAAIZ,SAAUU,EAAEE,GAAIX,SAAUS,EAAET,eAE3E,6BACI,yCACER,EAAMoB,kBAAoB,qDAExBpB,EAAMoB,kBACN,6BACKpB,EAAMqB,SAASL,KAAI,SAAAM,GAAC,OAAG,yBAAKJ,IAAOI,EAAEH,IAAKG,EAAEC,WAArB,KAAmCD,EAAEE,SAC7D,6BACI,8BAAUC,MAAOd,EAASe,SAAU,SAACC,GACjCf,EAAWe,EAAEC,cAAcH,QAC5BI,KAAK,OAEZ,6BACI,4BAAQC,QAAS,WAtBrC9B,EAAM+B,YAAY/B,EAAMoB,iBAAkBT,GAC1CC,EAAW,MAqBS,a,yCCrBtBoB,E,4LAEEjC,KAAKC,MAAMiC,KAAKlC,KAAKC,MAAMkC,MAAMC,OAAOC,U,yCAEzBC,EAAWC,EAAWC,GAClCxC,KAAKC,MAAMkC,MAAMC,OAAOC,SAAWC,EAAUH,MAAMC,OAAOC,QACzDrC,KAAKC,MAAMwC,OAAOzC,KAAKC,MAAMkC,MAAMC,OAAOC,U,+BAK9C,OACI,kBAAC,EAAYrC,KAAKC,W,GAZCE,IAAML,WA0BtB4C,4BAAQtC,aARD,SAACV,GACnB,MAAO,CACHsB,QAAStB,EAAMiD,YAAY3B,QAC3BM,SAAU5B,EAAMiD,YAAYrB,SAC5BD,iBAAkB3B,EAAMiD,YAAYtB,oBAII,CAACa,SAAMO,WAAQT,kBAC3DY,IACA/C,IAFW6C,CAGdT","file":"static/js/4.52675944.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n}\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xx2s\",\"dialogsItems\":\"Dialogs_dialogsItems__15bSe\",\"dialogBlock\":\"Dialogs_dialogBlock__3OPM2\",\"active\":\"Dialogs_active__2CWK0\",\"messagesItems\":\"Dialogs_messagesItems__3etrl\",\"message\":\"Dialogs_message__qD0pm\"};","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={`/dialogs/${props.dialogId}`}>{props.userName}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React, {useState} from 'react';\nimport s from './Dialogs.module.css';\nimport Dialog from \"./Dialog\";\n\nconst Dialogs = (props) => {\n    const [message, setMessage] = useState('');\n    const sendMessage = () => {\n        props.sendMessage(props.selectedDialogId, message);\n        setMessage('');\n    }\n    return (\n        <div className={s.dialogs}>\n            <div>\n                <h3>Dialogs</h3>\n                {props.dialogs.map(d => <Dialog key={d.id} dialogId={d.id} userName={d.userName}/>)}\n            </div>\n            <div>\n                <h3>Messages</h3>\n                {!props.selectedDialogId && <div>Please select dialog</div> }\n                {\n                    props.selectedDialogId &&\n                    <div>\n                        {props.messages.map(m=> <div key = {m.id}>{m.senderName}: {m.body}</div>)}\n                        <div>\n                            <textarea value={message} onChange={(e) => {\n                                setMessage(e.currentTarget.value)\n                            }} rows=\"5\"/>\n                        </div>\n                        <div>\n                            <button onClick={() => {sendMessage()}}>Send</button>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n};\n\n\nexport default Dialogs;","import React from 'react';\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {init, update, sendMessage} from \"../../redux/dialogsPageReducer\";\nimport {withRouter} from \"react-router-dom\";\n\nclass DialogsContainer extends React.Component {\n    componentDidMount() {\n        this.props.init(this.props.match.params.userId)\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\n            this.props.update(this.props.match.params.userId)\n        }\n    }\n\n    render(){\n        return (\n            <Dialogs {...this.props}/>\n        )\n    }\n\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        selectedDialogId: state.dialogsPage.selectedDialogId\n    }\n};\n\nexport default compose(connect(mapStateToProps, {init, update, sendMessage}),\n    withRouter,\n    withAuthRedirect)\n(DialogsContainer);"],"sourceRoot":""}