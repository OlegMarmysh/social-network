{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog.module.css","components/Dialogs/Dialog.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","className","style","dialog","dialogId","activeClassName","activeLink","userName","Dialogs","useState","message","setMessage","s","dialogs","map","d","key","id","messages","selectedDialogId","preTitle","messagesBlock","length","m","senderName","body","value","onChange","e","currentTarget","rows","onClick","sendMessage","DialogsContainer","init","match","params","userId","prevProps","prevState","snapshot","update","compose","dialogsPage","withRouter"],"mappings":"0NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAG,eAHR,GACXC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCd7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,0BAA0B,cAAgB,+BAA+B,QAAU,2B,oBCAxLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,wJCehDC,EAZA,SAACN,GACZ,OACI,yBAAKO,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASR,GAAE,mBAAcD,EAAMU,UAAYC,gBAAiBH,IAAMI,YAC9D,6BACKZ,EAAMa,aC2CZC,EAhDC,SAACd,GAAW,IAAD,EACOe,mBAAS,IADhB,mBAChBC,EADgB,KACPC,EADO,KAMvB,OACI,yBAAKV,UAAWW,IAAEC,SACd,6BACI,uCACCnB,EAAMmB,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAEE,GAAIb,SAAUW,EAAEE,GAAIV,SAAUQ,EAAER,eAE3E,yBAAKN,UAAWW,IAAEM,UACd,yCACExB,EAAMyB,kBAAoB,yBAAKlB,UAAWW,IAAEQ,UAAlB,wBAExB1B,EAAMyB,kBACN,yBAAKlB,UAAWW,IAAES,eACd,6BACM3B,EAAMwB,SAASI,OAAS,EAAK5B,EAAMwB,SAASJ,KAAI,SAAAS,GAAC,OAAI,yBAAKP,IAAKO,EAAEN,GACPhB,UAAWW,IAAEF,SACrE,6BACKa,EAAEC,YAEP,6BACKD,EAAEE,UAED,8CAEd,6BACI,8BAAUC,MAAOhB,EAASiB,SAAU,SAACC,GACjCjB,EAAWiB,EAAEC,cAAcH,QAC5BI,KAAK,MACR,6BACI,4BAAQC,QAAS,WA/BzCrC,EAAMsC,YAAYtC,EAAMyB,iBAAkBT,GAC1CC,EAAW,MA8Ba,c,yCC9B1BsB,E,4LAEExC,KAAKC,MAAMwC,KAAKzC,KAAKC,MAAMyC,MAAMC,OAAOC,U,yCAEzBC,EAAWC,EAAWC,GAClC/C,KAAKC,MAAMyC,MAAMC,OAAOC,SAAWC,EAAUH,MAAMC,OAAOC,QACzD5C,KAAKC,MAAM+C,OAAOhD,KAAKC,MAAMyC,MAAMC,OAAOC,U,+BAK9C,OACI,kBAAC,EAAY5C,KAAKC,W,GAZCE,IAAML,WA0BtBmD,4BAAQ7C,aARD,SAACV,GACnB,MAAO,CACH0B,QAAS1B,EAAMwD,YAAY9B,QAC3BK,SAAU/B,EAAMwD,YAAYzB,SAC5BC,iBAAkBhC,EAAMwD,YAAYxB,oBAII,CAACe,SAAMO,WAAQT,kBAC3DY,IACAtD,IAFWoD,CAGdT","file":"static/js/4.7295ced2.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n}\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xx2s\",\"messages\":\"Dialogs_messages__3bNMx\",\"preTitle\":\"Dialogs_preTitle__2bQ6n\",\"messagesBlock\":\"Dialogs_messagesBlock__1KsOw\",\"message\":\"Dialogs_message__qD0pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__36BgN\",\"activeLink\":\"Dialog_activeLink__1cTVp\"};","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={`/dialogs/${props.dialogId}`} activeClassName={style.activeLink}>\r\n                <div>\r\n                    {props.userName}\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React, {useState} from 'react';\nimport s from './Dialogs.module.css';\nimport Dialog from \"./Dialog\";\n\nconst Dialogs = (props) => {\n    const [message, setMessage] = useState('');\n    const sendMessage = () => {\n        props.sendMessage(props.selectedDialogId, message);\n        setMessage('');\n    };\n    return (\n        <div className={s.dialogs}>\n            <div>\n                <h3>Dialogs</h3>\n                {props.dialogs.map(d => <Dialog key={d.id} dialogId={d.id} userName={d.userName}/>)}\n            </div>\n            <div className={s.messages}>\n                <h3>Messages</h3>\n                {!props.selectedDialogId && <div className={s.preTitle}>Please select dialog</div>}\n                {\n                    props.selectedDialogId &&\n                    <div className={s.messagesBlock}>\n                        <div>\n                            {(props.messages.length > 0) ? props.messages.map(m => <div key={m.id}\n                                                                                        className={s.message}>\n                                <div>\n                                    {m.senderName}\n                                </div>\n                                <div>\n                                    {m.body}\n                                </div>\n                            </div>) : <span>No messages</span>}\n                        </div>\n                        <div>\n                            <textarea value={message} onChange={(e) => {\n                                setMessage(e.currentTarget.value)\n                            }} rows=\"3\"/>\n                            <div>\n                                <button onClick={() => {\n                                    sendMessage()\n                                }}>Send\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs;","import React from 'react';\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {init, update, sendMessage} from \"../../redux/dialogsPageReducer\";\nimport {withRouter} from \"react-router-dom\";\n\nclass DialogsContainer extends React.Component {\n    componentDidMount() {\n        this.props.init(this.props.match.params.userId)\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\n            this.props.update(this.props.match.params.userId)\n        }\n    }\n\n    render(){\n        return (\n            <Dialogs {...this.props}/>\n        )\n    }\n\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        selectedDialogId: state.dialogsPage.selectedDialogId\n    }\n};\n\nexport default compose(connect(mapStateToProps, {init, update, sendMessage}),\n    withRouter,\n    withAuthRedirect)\n(DialogsContainer);"],"sourceRoot":""}