{"version":3,"sources":["api/api.js","components/Common/FormsControl.js","redux/dialogsPageReducer.js","images/Spinner-1s-200px.svg","components/Common/Preloader/Preloader.module.css","images/reload.png","components/Profil/Description/ProfileDataReduxForm.js","components/Header/Navbar/NavBar.js","components/utilits/objectsHelper.js","redux/usersPageReducer.js","components/Common/Paginator/Paginator.js","components/Users/User.jsx","components/Users/Users.js","redux/usersSelectors.js","components/Users/UsersContainer.js","components/Header/Header.js","redux/authReducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","redux/appReducer.js","redux/reduxStore.js","hoc/withSuspense.js","App.js","index.js","components/Header/Navbar/NavBar.module.css","components/Common/FormsControl.module.css","components/Users/User.module.css","components/Login/Login.module.css","components/Common/Preloader/Preloader.js","components/Common/Paginator/Paginator.module.css","components/utilits/validators.js","components/Users/Users.module.css","components/Header/Header.module.css","images/users-vector-icon-png_260862.jpg","components/Profil/Description/ProfileDataReduxForm.module.css","redux/profilePageReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","sizePage","get","then","response","data","unfollowUsers","id","delete","followUsers","post","authAPI","getAuthUserData","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","profileAPI","getUserProfile","userId","getUserStatus","updateUserStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","dialogsApi","getDialogs","getMessages","startDialog","sendMessage","message","body","FormControl","input","meta","props","hasError","touched","error","className","styles","children","Input","restProps","createField","name","placeholder","component","validators","text","validate","GET_DIALOGS_SUCCESS","GET_MESSAGES_SUCCESS","SEND_MESSAGE_SUCCESS","initialState","dialogs","messages","selectedDialogId","setCurrentDialog","type","payload","sendMessageSuccess","dispatch","a","async","items","dialogsPageReducer","state","action","module","exports","ProfileDataReduxForm","reduxForm","form","handleSubmit","s","content","onSubmit","loginError","lookForJob","NavBar","navBarWrapper","item","to","activeClassName","activeLink","updateObjectInArray","itemsId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_PAGES","TOTAL_COUNT_USERS","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","users","totalCountItems","isFetching","followingInProgress","portionSize","setIsFetching","setFollowingInProgress","followUnFollowFlow","apiMethod","actionCreator","resultCode","usersPageReducer","followed","pageNumber","countUsers","filter","Paginator","onSetPages","countPages","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftBorderPortion","rightBorderPortion","wrapper","prevBtn","onClick","p","usersPage","activePage","nextBtn","User","photos","unFollow","follow","user","photo","src","small","userPhoto","unfBtn","disabled","some","follBtn","fullName","Users","paginator","getTotalCountUsers","getSizePage","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","requestUsers","this","Preloader","React","Component","connect","followSuccess","unFollowSuccess","totalCount","Header","header","headerContent","loginWrapper","isAuth","loginContent","alt","style","color","fontWeight","fontSize","SET_USER_DATA","SET_CAPTCHA_SUCCESS","captchaUrl","setAuthUserData","setCaptcha","url","authReducer","HeaderContainer","getAuthUserProfile","auth","LoginReduxForm","styleLogin","loginForm","required","checkbox","reload","reloadImg","loginBtn","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profilePageReducer","dialogsPage","formReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","compose","withRouter","promise","Promise","all","SocialApp","ReactDOM","document","getElementById","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","SAVE_PHOTO","posts","likeCounts","addPost","newTextPost","setUserStatus","deletePost","postId","getState","reject"],"mappings":"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","file":"static/js/main.4719534f.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '59ead4fb-0c13-4727-ad30-0a30cf50ed9b'\r\n    }\r\n})\r\n\r\nexport const usersAPI ={\r\n    getUsers: (currentPage, sizePage) => {\r\n        return instance.get(`users?page=${currentPage}&count=${sizePage}`,\r\n        ).then(response=> {\r\n            return  response.data\r\n        })\r\n    },\r\n    unfollowUsers: (id)=>{\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    followUsers: (id)=>{\r\n        return instance.post(`follow/${id}`, {})\r\n    }\r\n};\r\n\r\nexport const authAPI ={\r\n    getAuthUserData: () => {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login: (email, password, rememberMe, captcha=null) => {\r\n      return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout: () => {\r\n      return instance.delete(`auth/login`)\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptcha: () => {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getUserStatus: (userId) => {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateUserStatus: (status) => {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto: (file) => {\r\n        const formData = new FormData ();\r\n        formData.append('image', file);\r\n        return instance.put (`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile: (profile) => {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n};\r\n\r\nexport const dialogsApi = {\r\n    getDialogs(){\r\n        return instance.get('dialogs')\r\n    },\r\n    getMessages(userId){\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n    },\r\n    startDialog(userId){\r\n        return instance.put(`dialogs/${userId}`)\r\n    },\r\n    sendMessage(userId, message){\r\n        return instance.post(`dialogs/${userId}/messages`, {body: message})\r\n    }\r\n};\r\n","import React from 'react'\r\nimport styles from './FormsControl.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../utilits/validators\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div className={hasError ? styles.error : ''}>\r\n                {props.children}\r\n            </div>\r\n            <div className={styles.error}>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const createField = (name, placeholder, component, validators, props = {}, text = '') => (\r\n    <div>\r\n        <Field name={name} placeholder={placeholder} component={component} validate = {validators} {...props}/> {text}\r\n    </div>\r\n);","import {dialogsApi} from \"../api/api\";\r\n\r\nconst GET_DIALOGS_SUCCESS = 'social-network/dialogsPage/GET_DIALOGS_SUCCESS';\r\nconst GET_MESSAGES_SUCCESS = 'social-network/dialogsPage/GET_MESSAGES_SUCCESS';\r\nconst SET_CURRENT_DIALOG = 'social-network/dialogsPage/SET_CURRENT_DIALOG';\r\nconst SEND_MESSAGE_SUCCESS = 'social-network/dialogsPage/SEND_MESSAGE_SUCCESS';\r\n\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    selectedDialogId: null\r\n};\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DIALOGS_SUCCESS:\r\n        case GET_MESSAGES_SUCCESS:\r\n        case SET_CURRENT_DIALOG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case SEND_MESSAGE_SUCCESS:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.message]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const getDialogsSuccess = (dialogs) => ({type: GET_DIALOGS_SUCCESS, payload: {dialogs}});\r\nexport const getMessagesSuccess = (messages) => ({type: GET_MESSAGES_SUCCESS, payload: {messages}});\r\nexport const setCurrentDialog = (selectedDialogId) => ({type: GET_MESSAGES_SUCCESS, payload: {selectedDialogId}});\r\n\r\n\r\nexport const sendMessageSuccess = (message) => ({type: SEND_MESSAGE_SUCCESS, message});\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    let response = await dialogsApi.getDialogs();\r\n    dispatch(getDialogsSuccess(response.data))\r\n};\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    let response = await dialogsApi.getMessages(userId);\r\n    dispatch(getMessagesSuccess(response.data.items))\r\n};\r\n\r\nexport const sendMessage = (userId, message) => async (dispatch) => {\r\n    debugger\r\n    let response = await dialogsApi.sendMessage(userId, message);\r\n    dispatch(sendMessageSuccess(response.data.data.message))\r\n};\r\n\r\nexport default dialogsPageReducer;","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.b0fb2661.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__k9nKN\"};","module.exports = __webpack_public_path__ + \"static/media/reload.d36f9122.png\";","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControl\";\r\nimport s from './ProfileDataReduxForm.module.css';\r\nimport styles from \"../../Common/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <div className={s.content}>\r\n        <form onSubmit={handleSubmit}>\r\n            {error && <div className={styles.loginError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>Full Name: </b> {createField('fullName', 'Full Name', Input, null, {type: 'text'})}\r\n            </div>\r\n            <div>\r\n                <b>About me: </b> {createField('aboutMe', 'About me', Input, null, {type: 'text'})}\r\n            </div>\r\n            <div className={s.lookForJob}>\r\n                <b>Looking for a job: </b> {createField('lookingForAJob', null, Input, null, {type: 'checkbox'})}\r\n            </div>\r\n            <b>Looking for a job\r\n                description: </b> {createField('lookingForAJobDescription', 'Looking for a job description', Input, null, {type: 'text'})}\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            {/*<div>\r\n                <b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: </b> {createField('contacts.' + key, key, Input)}\r\n                </div>\r\n            })}\r\n            </div>*/}\r\n        </form>\r\n    </div>\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm","import React from 'react';\nimport s from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavBar = () => {\n    return (\n        <div className={s.navBarWrapper}>\n            <div className={s.item}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n   return  items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../components/utilits/objectsHelper\";\r\n\r\nconst FOLLOW = 'social-network/userPage/FOLLOW';\r\nconst UNFOLLOW = 'social-network/userPage/UNFOLLOW';\r\nconst SET_USERS = 'social-network/userPage/SET_USERS';\r\nconst SET_PAGES = 'social-network/userPage/SET_PAGES';\r\nconst TOTAL_COUNT_USERS = 'social-network/userPage/TOTAL_COUNT_USERS';\r\nconst TOGGLE_IS_FETCHING = 'social-network/userPage/TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'social-network/userPage/FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCountItems: 50,\r\n    sizePage: 12,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    portionSize: 10\r\n};\r\n\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        case SET_PAGES: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        }\r\n        case TOTAL_COUNT_USERS: {\r\n            return {\r\n                ...state,\r\n                totalCountItems: action.countUsers\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unFollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setPages = (pageNumber) => ({type: SET_PAGES, pageNumber});\r\nexport const setTotalCountUsers = (countUsers) => ({type: TOTAL_COUNT_USERS, countUsers});\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setFollowingInProgress = (isFetching, userId) => ({type: FOLLOWING_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (currentPage, sizePage) => async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage, sizePage);\r\n    dispatch(setIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalCountUsers(data.totalCount));\r\n    dispatch(setPages(currentPage))\r\n};\r\n\r\nconst followUnFollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    let response = await apiMethod;\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator)\r\n    }\r\n    dispatch(setFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const unFollow = (userId) => (dispatch) => {\r\n    followUnFollowFlow(dispatch, userId, usersAPI.unfollowUsers(userId), unFollowSuccess(userId))\r\n};\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n    followUnFollowFlow(dispatch, userId, usersAPI.followUsers(userId), followSuccess(userId))\r\n};\r\n\r\n\r\nexport default usersPageReducer;","import React, {useState} from 'react'\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nlet Paginator = ({totalCountItems, sizePage, currentPage, onSetPages, portionSize}) => {\r\n    let countPages = Math.ceil(totalCountItems / sizePage);\r\n    let pages = [];\r\n    for (let i = 1; i <= countPages; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(countPages / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftBorderPortion = (portionNumber - 1) * portionSize + 1;\r\n    let rightBorderPortion = portionNumber * portionSize;\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {portionNumber > 1 &&\r\n            <button className={styles.prevBtn} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>{'<'}</button>\r\n            }\r\n            {pages.filter(p => p >= leftBorderPortion && p <= rightBorderPortion).map(p => {\r\n                return <div className={styles.usersPage}><button className={currentPage===p && styles.activePage} onClick={() => {\r\n                    onSetPages(p)\r\n                }}>{p}</button></div>\r\n            })}\r\n            {portionCount > portionNumber &&\r\n            <button className={styles.nextBtn} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>{'>'}</button>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport styles from \"./User.module.css\";\r\nimport userPhoto from \"../../images/users-vector-icon-png_260862.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({userId, photos, followed, name, status, followingInProgress, unFollow, follow}) => {\r\n    return (\r\n        <div className={styles.user}>\r\n            <div>\r\n                <NavLink to={`/profile/${userId}`}>\r\n                    <img className={styles.photo} src={photos.small !== null ? photos.small : userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {followed ? <button className={styles.unfBtn} disabled={followingInProgress.some(id => id === userId)} onClick={() => {\r\n                        unFollow(userId)\r\n                    }}>Unfollow</button> :\r\n                    <button className={styles.follBtn} disabled={followingInProgress.some(id => id === userId)} onClick={() => {\r\n                        follow(userId)\r\n                    }}>Follow</button>}\r\n            </div>\r\n            <span>\r\n                        <div className={styles.fullName}>\r\n                            {name}\r\n                        </div>\r\n                        <div className={styles.status}>\r\n                            {status}\r\n                        </div>\r\n                    </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react'\r\nimport styles from \"./Users.module.css\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalCountItems, portionSize, sizePage, currentPage, onSetPages, users, followingInProgress, unFollow, follow}) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.paginator}>\r\n                <Paginator totalCountItems={totalCountItems} sizePage={sizePage}\r\n                           currentPage={currentPage} onSetPages={onSetPages}\r\n                           portionSize={portionSize}\r\n                />\r\n            </div>\r\n            <div className={styles.users}>\r\n                {\r\n                    users.map(u => <User userId={u.id} status={u.status} name={u.name} followed={u.followed}\r\n                                         photos={u.photos}\r\n                                         followingInProgress={followingInProgress}\r\n                                         unFollow={unFollow}\r\n                                         follow={follow}\r\n                                         className={styles.users}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.users.users\r\n};\r\n\r\nexport const getTotalCountUsers = (state) => {\r\n   return state.users.totalCountItems\r\n};\r\n\r\nexport const getSizePage = (state) => {\r\n    return state.users.sizePage\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.users.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.users.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.users.followingInProgress\r\n};\r\nexport const getPortionSize = (state) => {\r\n    return state.users.portionSize\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {follow, requestUsers, unFollow} from \"../../redux/usersPageReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching, getPortionSize,\r\n    getSizePage,\r\n    getTotalCountUsers, getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.sizePage)\r\n    }\r\n\r\n    onSetPages = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.sizePage)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>{this.props.isFetching ? <Preloader/> : null} </div>\r\n                <div>\r\n                    <Users totalCountItems={this.props.totalCountItems}\r\n                           portionSize={this.props.portionSize}\r\n                           sizePage={this.props.sizePage}\r\n                           currentPage={this.props.currentPage}\r\n                           onSetPages={this.onSetPages}\r\n                           users={this.props.users}\r\n                           unFollow={this.props.unFollow}\r\n                           follow={this.props.follow}\r\n                           followingInProgress={this.props.followingInProgress}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalCountItems: getTotalCountUsers(state),\r\n        sizePage: getSizePage(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    requestUsers\r\n})(UsersContainer);","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Navbar from \"./Navbar/NavBar\";\nimport userPhoto from \"../../images/users-vector-icon-png_260862.jpg\";\nimport Preloader from \"../Common/Preloader/Preloader\";\n\nconst Header = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={s.header}>\n            <div className={s.headerContent}>\n                <img src='https://avatanplus.com/files/resources/mid/5cd273c518f1216a961439ee.png'/>\n                <div>\n                    <Navbar/>\n                </div>\n                <div className={s.loginWrapper}>\n                    {props.isAuth ?\n                        (  <div className={s.loginContent}>\n                                <img src={props.profile.photos.small || userPhoto} alt=\"profile Photo\"/>\n                                <div><span style={{color: '#fffffe', fontWeight: 'bold', fontSize: '14px'}}>{props.login}</span><a onClick={props.logout}>Log out</a></div>\n                            </div>\n                        ) :\n                        <NavLink to={'/login'}>Login</NavLink>}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Header;","import {authAPI, profileAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_SUCCESS = 'social-network/auth/SET_CAPTCHA_SUCCESS';\r\nconst SET_AUTH_USER_PROFILE = 'social-network/auth/SET_AUTH_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    profile: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_SUCCESS:\r\n        case SET_AUTH_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, login, email, isAuth}\r\n});\r\nexport const setCaptchaSuccess = (captchaUrl) => ({\r\n    type: SET_CAPTCHA_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\nexport const setAuthUserProfile = (profile) => ({type: SET_AUTH_USER_PROFILE, payload: {profile}});\r\n\r\nexport const getAuthUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserProfile(userId);\r\n    dispatch(setAuthUserProfile(response.data));\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getAuthUserData();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(setCaptcha())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    await authAPI.logout();\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n};\r\n\r\nexport const setCaptcha = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptcha();\r\n    dispatch(setCaptchaSuccess(response.data.url))\r\n};\r\n\r\n\r\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserProfile, logout} from \"../../redux/authReducer\";\n\nclass HeaderContainer extends React.Component {\n    componentDidMount() {\n        this.props.getAuthUserProfile(this.props.userId)\n    }\n\n   /* componentDidUpdate(prevProps, prevState, snapshot) {\n        debugger\n        if(prevProps.profile.photos.small !== this.props.profile.photos.small){\n            this.props.getAuthUserProfile(this.props.userId)\n        }\n    }*/\n\n    render() {\n        return (\n            <div>\n                <Header {...this.props}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        userId: state.auth.userId,\n        profile: state.auth.profile,\n        login: state.auth.login,\n        isAuth: state.auth.isAuth\n    }\n\n};\n\nexport default connect(mapStateToProps, {logout, getAuthUserProfile})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControl\";\r\nimport {required} from \"../utilits/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, setCaptcha} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../Common/FormsControl.module.css\"\r\nimport styleLogin from \"./Login.module.css\"\r\nimport reload from '../../images/reload.png'\r\n\r\nconst Login = ({login, isAuth, captchaUrl, setCaptcha}) => {\r\n    let onSubmit = ({email, password, rememberMe, captcha, ...formData}) => {\r\n        login(email, password, rememberMe, captcha)\r\n    };\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={styleLogin.wrapper}>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} setCaptcha={setCaptcha}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl, setCaptcha}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styleLogin.loginForm}>\r\n            <h2>Sign in</h2>\r\n            {createField('email', 'Email', Input, [required], {type: 'text'})}\r\n            {createField('password', 'Password', Input, [required], {type: 'password'})}\r\n            <div className={styleLogin.checkbox}>\r\n                {createField('rememberMe', null, 'input', null, {type: 'checkbox'}, 'Remember me')}\r\n            </div>\r\n            <div className={styles.loginError}>\r\n                {error}\r\n            </div>\r\n            <div className={styleLogin.captcha}>\r\n                <div>\r\n                    <img src={captchaUrl}/>\r\n                    {captchaUrl && <img src={reload} onClick={setCaptcha} className={styleLogin.reloadImg}/>}\r\n                </div>\r\n                <div>\r\n                    {captchaUrl && createField('captcha', 'captcha', Input, [required])}\r\n                </div>\r\n            </div>\r\n            <div >\r\n                <button className={styleLogin.loginBtn}>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {login, setCaptcha})(Login)\r\n","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    await Promise.all([promise]);\r\n    dispatch(initializedSuccess())\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogsPageReducer from \"./dialogsPageReducer\";\r\nimport usersPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    users: usersPageReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Suspense} from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n};","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Header/Navbar/NavBar\";\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport store from \"./redux/reduxStore\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport ProfileDataReduxForm from \"./components/Profil/Description/ProfileDataReduxForm\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profil/ProfileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <>\n                <div className='appWrapper'>\n                    {this.props.isAuth && <HeaderContainer/>}\n                    <div className='app_wrapper_profile'>\n                        <Switch>\n                        <Route exact path to='/' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/dialogs/:userId?' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    isAuth: state.auth.isAuth\n});\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\nlet SocialApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n};\n\nexport default SocialApp;","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialApp from \"./App\";\n\n\nReactDOM.render(\n    <SocialApp/>\n    , document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarWrapper\":\"NavBar_navBarWrapper__3_9uH\",\"item\":\"NavBar_item__-7zU1\",\"activeLink\":\"NavBar_activeLink__2FzHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__1S70_\",\"loginError\":\"FormsControl_loginError__2m793\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__8qHAB\",\"photo\":\"User_photo__26D2M\",\"status\":\"User_status__3rzYE\",\"unfBtn\":\"User_unfBtn__1axb2\",\"follBtn\":\"User_follBtn__33eE9\",\"fullName\":\"User_fullName__1fAcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2OAZh\",\"loginForm\":\"Login_loginForm__2_d08\",\"checkbox\":\"Login_checkbox__32Lmv\",\"loginBtn\":\"Login_loginBtn__3fegC\",\"captcha\":\"Login_captcha__MSo3R\",\"reloadImg\":\"Login_reloadImg__BPIGA\"};","import React from 'react';\r\nimport preloader from \"../../../images/Spinner-1s-200px.svg\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img src={preloader}/>\r\n        </div>\r\n        )\r\n\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Paginator_wrapper__1aiAx\",\"usersPage\":\"Paginator_usersPage__3bBdp\",\"activePage\":\"Paginator_activePage__1uTtr\",\"nextBtn\":\"Paginator_nextBtn__25Tfy\",\"prevBtn\":\"Paginator_prevBtn__1TW5f\"};","import React from 'react'\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n};\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__2tQjr\",\"users\":\"Users_users__tFwSo\",\"paginator\":\"Users_paginator__TFNfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__25gid\",\"headerContent\":\"Header_headerContent__GGuQ1\",\"loginWrapper\":\"Header_loginWrapper__1Xyon\",\"loginContent\":\"Header_loginContent__MtDav\"};","module.exports = __webpack_public_path__ + \"static/media/users-vector-icon-png_260862.13988554.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileDataReduxForm_content__DSZqv\",\"lookForJob\":\"ProfileDataReduxForm_lookForJob__38x54\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'social-network/profilePage/ADD_POST';\r\nconst SET_USER_PROFILE = 'social-network/profilePage/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'social-network/profilePage/SET_USER_STATUS';\r\nconst DELETE_POST = 'social-network/profilePage/DELETE_POST';\r\nconst SAVE_PHOTO = 'social-network/profilePage/SAVE_PHOTO';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: '1', post: 'How are you my dear friends', likeCounts: '60'},\r\n        {id: '2', post: 'Its my first project', likeCounts: '67'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let post = {\r\n                id: '3', post: action.newTextPost, likeCounts: '0'\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, post],\r\n            };\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return  {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newTextPost) => ({type: ADD_POST, newTextPost});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserStatus(userId);\r\n    dispatch(setUserStatus(response.data))\r\n};\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateUserStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    } else {\r\n        dispatch(setUserStatus(response.data.messages))\r\n    }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getUserProfile(userId))\r\n    }else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n};\r\n\r\nexport default profilePageReducer;\r\n\r\n\r\n"],"sourceRoot":""}