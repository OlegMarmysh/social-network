{"version":3,"sources":["components/Profil/Description/Description.module.css","components/Profil/MyPost/Mypost.module.css","components/Profil/MyPost/Post/Post.module.css","components/Profil/Profile.module.css","components/Profil/Description/ProfileStatusWithHooks.js","components/Profil/Description/Description.js","components/Profil/MyPost/Post/Post.js","components/Profil/MyPost/MyPost.js","components/Profil/MyPost/MyPostContainer.js","components/Profil/Profile.js","components/Profil/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","ProfileData","profile","className","s","fullName","aboutProfile","aboutMe","lookingForAJob","lookingForAJobDescription","Description","isOwner","savePhoto","saveProfile","Preloader","description","avatarContent","avatar","src","photos","large","userPhoto","chooseAvatar","label","type","target","files","length","profileData","ProfileDataReduxForm","onSubmit","formData","then","initialValues","Post","post","postContent","likeCounts","deletePost","postId","maxLength20","maxLengthCreator","MyPost","React","memo","postsElements","posts","map","p","id","values","addPost","newTextPost","Posts","AddMessageForm","handleSubmit","addMessageForm","inputContent","Field","name","component","Input","validate","required","placeholder","reduxForm","form","MyPostContainer","connect","state","profilePage","Profile","profileContent","descriptionContent","myPostContent","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.3cc00a34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__1DRRL\",\"avatarContent\":\"Description_avatarContent__z8KGd\",\"profileData\":\"Description_profileData__38iAy\",\"avatar\":\"Description_avatar__3xevs\",\"contact\":\"Description_contact__DzkWd\",\"chooseAvatar\":\"Description_chooseAvatar__CpSMa\",\"label\":\"Description_label__3M5Py\",\"editMode\":\"Description_editMode__2iWce\",\"fullName\":\"Description_fullName__2rcew\",\"status\":\"Description_status__yA1Ak\",\"aboutProfile\":\"Description_aboutProfile__2viDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPost\":\"Mypost_MyPost__2B5wH\",\"Posts\":\"Mypost_Posts__6s4Zu\",\"inputContent\":\"Mypost_inputContent__16dDa\",\"addMessageForm\":\"Mypost_addMessageForm__hFWWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1FBKl\",\"postContent\":\"Post_postContent__2CWSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContent\":\"Profile_profileContent__2utnq\",\"descriptionContent\":\"Profile_descriptionContent__1b5tm\",\"myPostContent\":\"Profile_myPostContent__2N-mD\"};","import React, {useState, useEffect}from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect(()=>{setStatus(props.status)}, [props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n    const onChangeInput= (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n        return (\r\n            <div >\r\n                {!editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{props.status || 'No status'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <input onChange={onChangeInput} value={status} onBlur={deactivateEditMode} autoFocus={true}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState} from 'react';\nimport s from './Description.module.css';\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../images/users-vector-icon-png_260862.jpg\";\nimport ProfileDataReduxForm from \"./ProfileDataReduxForm\";\nimport {NavLink, Route} from \"react-router-dom\";\n\n\nconst Description = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfile}) => {\n    const [editMode, setEditMode] = useState(false);\n    if (!profile) {\n        return <Preloader/>\n    }\n    let onChooseAvatar = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    };\n    const handleSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false)\n            }\n        );\n    };\n    return (\n        <div className={s.description}>\n            <div className={s.avatarContent}>\n                <img className={s.avatar} src={profile.photos.large || userPhoto}/>\n                {\n                    isOwner && <div className={s.chooseAvatar}>\n                        <label className={s.label}><input type={'file'} onChange={onChooseAvatar}/>Update photo</label>\n                    </div>\n                }\n                <div className={s.editMode}>\n                    {isOwner && <div>\n                            <button onClick={() => {\n                                setEditMode(true)\n                            }}>edit\n                            </button>\n                    </div>}\n                </div>\n            </div>\n            <div className={s.profileData}>\n                {editMode ?\n                    <ProfileDataReduxForm onSubmit={handleSubmit} profile={profile} initialValues={profile}/>\n                    : <ProfileData profile={profile} status={status} updateUserStatus={updateUserStatus}/>\n                }\n            </div>\n        </div>\n    )\n};\n\nconst ProfileData = ({profile, status, updateUserStatus}) => {\n    return <div>\n        <div className={s.fullName}>\n            {profile.fullName}\n        </div>\n        <div className={s.status}>\n            <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\n        </div>\n        <div className={s.aboutProfile}>\n            <div>\n                <b>About me: </b><span>{profile.aboutMe}</span>\n            </div>\n            <div>\n                <b>Looking for a job: </b><span>{profile.lookingForAJob ? 'yes' : 'no'}</span>\n            </div>\n            {profile.lookingForAJob && <div>\n                <b>Job description: </b><span>{profile.lookingForAJobDescription}</span>\n            </div>}\n            {/*<div>\n                <b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactKey={key} contactValue={profile.contacts[key]}/>\n            })}\n            </div>*/}\n        </div>\n    </div>\n}\n\nconst Contact = ({contactKey, contactValue}) => {\n    return (\n        <div>\n            {contactValue &&\n            <div className={s.contact}>\n                <b>{contactKey}: </b> <span>{contactValue}</span>\n            </div>\n            }\n        </div>\n    )\n};\n\nexport default Description;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img src='https://avatarko.ru/img/kartinka/1/multfilm_gomer.png'/>\n                {props.post}\n                <div>\n                    <span>Like {props.likeCounts}</span>\n                    <button onClick={()=>{props.deletePost(props.postId)}}>X</button>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './Mypost.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../Common/FormsControl\";\nimport {maxLengthCreator, required} from \"../../utilits/validators\";\nimport Preloader from \"../../Common/Preloader/Preloader\";\n\nconst maxLength20 = maxLengthCreator(20);\n\nconst MyPost = React.memo((props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    let postsElements = props.posts.map(p => <Post deletePost = {props.deletePost} postId={p.id} post={p.post} likeCounts={p.likeCounts}/>);\n\n    let onAddPost = (values) => {\n        props.addPost(values.newTextPost);\n    };\n    return (\n        <div className={s.MyPost}>\n            <AddMessageForm onSubmit={onAddPost}/>\n            <div className={s.Posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nlet AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.addMessageForm}>\n            <div className={s.inputContent}>\n                <Field name='newTextPost' component={Input} validate={[required, maxLength20]} placeholder={'Add new post'}/>\n            </div>\n            <div>\n                <button>Add</button>\n            </div>\n        </form>\n    )\n};\n\nAddMessageForm=reduxForm({form: 'ProfileAddMessageForm'})(AddMessageForm);\n\nexport default MyPost;","import React from 'react';\nimport MyPost from \"./MyPost\";\nimport {connect} from \"react-redux\";\nimport {addPost, deletePost} from \"../../../redux/profilePageReducer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newTextPost: state.profilePage.newTextPost,\n        profile: state.profilePage.profile\n    }\n};\n\nconst MyPostContainer = connect (mapStateToProps, {addPost, deletePost}) (MyPost);\n\nexport default MyPostContainer;","import React from 'react';\nimport Description from \"./Description/Description\";\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\nimport s from \"./Profile.module.css\"\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst Profile = (props) => {\n    return (\n        <div className={s.profileContent}>\n            <div className={s.descriptionContent}>\n                    <Description profile={props.profile} status={props.status}\n                                 updateUserStatus={props.updateUserStatus} isOwner={props.isOwner}\n                                 savePhoto={props.savePhoto}\n                                 saveProfile={props.saveProfile}\n                    />\n            </div>\n            <div className={s.myPostContent}>\n                <MyPostContainer />\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../redux/profilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId=this.props.match.params.userId;\r\n        if (!userId){\r\n            userId=this.props.autorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner = {!this.props.match.params.userId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n    )\r\n(ProfileContainer);"],"sourceRoot":""}